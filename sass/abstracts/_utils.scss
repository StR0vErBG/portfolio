@use "./breakpoints" as breakpoints;
@use "./colors" as *;
@use "sass:math";
.d-none{
    display:none !important;
}
.d-block{
    display:block !important;
}
.d-flex{
    display: flex !important;
}
.d-grid{
    display: grid !important;
}
.order-m1{
    order: -1;
}
.order-1{
    order: 1;
}
.order-2{
    order: 2;
}
.order-3{
    order: 3;
}
$padding-num: 5;
@each $key, $value in breakpoints.$breakpoints{

    @for $i from 1 through $padding-num{
        @media (min-width: $value){
            .b-#{$key}-#{$i}{
                border: $i * 1rem solid $bg-color;
            }
        }
        
    }
    .order-#{$key}-1{
        @media (min-width: $value){
            order: 1;
        }
    }
    .order-#{$key}-2{
        @media (min-width: $value){
           order: 2;
        }
    }
    .order-#{$key}-3{
        @media (min-width: $value){
        order: 3;
        }
    }
    .order-#{$key}-m1{
        @media (min-width: $value){
            order: -1;
        }
    }
    .d-#{$key}-none{
        @media (min-width: $value){
            display: none !important;
        }
    }
    .d-#{$key}-block{
        @media (min-width: $value){
            display: block !important;
        }
    }
    .d-#{$key}-flex{
        @media (min-width: $value){
            display: flex !important;
        }
    }
    .d-#{$key}-grid{
        @media (min-width: $value){
            display: grid !important;
        }
    }
    // This is still in test
    .container-#{$key}-fluid{
        @media (min-width: $value){
            width:  min(100% - 2rem, 1600px);
            margin-inline: auto;
        }
    }
    .container-#{$key}{
        @media (min-width: $value){
            width:  min(100% - 2rem, 600px);
            margin-inline: auto;
        }
    }
  
}

.list-container{
        list-style-type: disc !important;
        padding-left: 1rem;
}
